const o="moviedb_watchlist";class d{static getWatchlist(){try{const t=localStorage.getItem(o);return t?JSON.parse(t):[]}catch(t){return console.error("Error loading watchlist:",t),[]}}static addToWatchlist(t,r){try{const e=this.getWatchlist(),a=t.id.toString();if(e.some(i=>i.id===a&&i.type===r))return!1;const s=r==="movie"?t.title:t.name,c=r==="movie"?t.release_date:t.first_air_date,l=[{id:a,type:r,title:s,poster_path:t.poster_path,backdrop_path:t.backdrop_path,overview:t.overview,release_date:r==="movie"?c:void 0,first_air_date:r==="tv"?c:void 0,vote_average:t.vote_average,addedAt:new Date().toISOString()},...e].slice(0,100);return localStorage.setItem(o,JSON.stringify(l)),!0}catch(e){return console.error("Error adding to watchlist:",e),!1}}static removeFromWatchlist(t,r){try{const a=this.getWatchlist().filter(s=>!(s.id===t&&s.type===r));return localStorage.setItem(o,JSON.stringify(a)),!0}catch(e){return console.error("Error removing from watchlist:",e),!1}}static isInWatchlist(t,r){return this.getWatchlist().some(a=>a.id===t&&a.type===r)}static clearWatchlist(){try{localStorage.removeItem(o)}catch(t){console.error("Error clearing watchlist:",t)}}static getWatchlistCount(){return this.getWatchlist().length}}export{d as W};
